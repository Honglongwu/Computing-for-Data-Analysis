x<-c('a'=1,'b'=2,'c'=3)
x
xp1
x[1]
x['1']
x['a']
x[x['a']]
class(x['a'])
names9x
names(x)
x['d']
if(y<-x['d'] == NA){stop('invalide')}
if((y<-x['d']) == NA){stop('invalide')}
?as.numeric
as.numeric(c(1,2,3,'B'))
as.numeric(c(1,2,3,'B'), na.rm = T)
na.omit(c(1,2,3))
na.omit(c(1,2,3,NA))
?na.omit
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
na.omit(DF)
source('~/.active-rstudio-document')
best("TX", "heart attack")
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/best.R')
setwd("/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('rankhospital.R')
rankhospital("MD", "heart failure", 5)
head(texas)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
as.factor(c('a','b','c','a','a'))
str(split)
str(tapply)
source('rankall.R')
head(rankall("heart attack", 20), 10)
outcome <- 'heart attack'
outcomes <- c('heart attack'=11, 'heart failure'=17, 'pneumonia'=23)
#check that outcome is valid
if(!outcome%in%names(outcomes)) {stop("invalid outcome")}
#interpret outcome to column number
outcome <- outcomes[outcome]
#read in outcome data
data <- read.csv('ProgAssignment3-data/outcome-of-care-measures.csv', colClasses='character')
#suppress the warnings of creating NAs in transforming data type
data[, outcome] <- suppressWarnings(as.numeric(data[, outcome]))
#remove NAs
data <- data[!is.na(data[, outcome]),]
levels(data$State)
levels(as.factor(data$State)
)
sapply(levels(as.factor(data$State)), function(x){x})
lapply(levels(as.factor(data$State)), function(x){x})
sapply(levels(as.factor(data$State)), function(x){x})
data.states.ordered <- sapply(levels(as.factor(data$State)),
function(x){
state <- data[data$State == x, ]
state[order(state[, outcome], state$Hospital.Name), ]
})
#return the name of hospital that has the given rank at each state
hospitals_of_rank <- sapply(data.states.ordered['Hospital.Name', ], function(x){
rank <- if(is.numeric(num)) {
num
} else if (num == 'best') {
1
} else if (num == 'worst') {
length(x)
} else if (!is.numeric(as.integer(num))) {
as.integer(num)
} else {
stop('invalid rank number')
}
x[rank]
})
num<-1
hospitals_of_rank <- sapply(data.states.ordered['Hospital.Name', ], function(x){
rank <- if(is.numeric(num)) {
num
} else if (num == 'best') {
1
} else if (num == 'worst') {
length(x)
} else if (!is.numeric(as.integer(num))) {
as.integer(num)
} else {
stop('invalid rank number')
}
x[rank]
})
#return the data frame
data.frame(hospital=hospitals_of_rank, state=names(hospitals_of_rank))
source('rankall.R')
head(rankall("heart attack", 20), 10)
source('rankall.R')
head(rankall("heart attack", 20), 10)
proc.time()
proc.time()
proc.time()
proc.time()
proc.time()
proc.time()
str(proc.time())
names(proc.time())
proc.time()['elapsed']
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
source('/Volumes/Macintosh HD/Users/beader/Dropbox/Homeworks/Computing for Data Analysis/hw3/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
